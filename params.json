{
  "name": "Santa's Christmas Adventure!",
  "tagline": "Project by: Courtney Brown",
  "body": "# Welcome to...\r\n![](https://s3-us-west-2.amazonaws.com/cpe305images/Title.png)\r\n### Join Santa on his Christmas Eve adventure!\r\nSanta needs help delivering presents to children all over the world. Join him in guiding his reindeer to 10 cities across the map to keep the Christmas spirit alive. Santa’s Christmas Adventure is a text based game lightly based off The Oregon Trail. At each city along the way, you have the options to view some famous landmarks and deliver presents. However, with 21st century tech-savvy children, delivering presents isn’t as easy as it once was. Are you up for the challenge? \r\n\r\n***\r\n![](https://s3-us-west-2.amazonaws.com/cpe305images/SantaWithText.png)\r\n## Dependencies\r\nThe game uses a simple JSON library to store most of the game text along with some object data, like the weights of the items that Santa can take with him, the unique lists items that each store stocked, and the majority of the game configurations. \r\n\r\n\r\n## System Architecture\r\nSanta's Christmas Adventure implements a 3-tier architecture. The presentation layer utilizes the the terminal to display game text to the user. The 3 main components of the logic layer process user input (InputReader), display game text (TextWriter), and determine the next action to be taken (Game); minor logic is executed in the Store, MiniGame, and Driver classes. The data layer consists of the Santa, Sleigh, City, and Reindeer classes, which keep track of data necessary for the Game to operate properly. \r\n\r\n![](https://s3-us-west-2.amazonaws.com/cpe305images/architecture.png)\r\n\r\n\r\n## Class Diagram\r\n\r\n![](https://s3-us-west-2.amazonaws.com/cpe305images/classDiagram.png)\r\n\r\n## Design Patterns\r\nThe InputReader, TextWriter, and Game classes all implement the Singleton pattern. The use of the pattern for the InputReader and TextWriter classes are to ensure that a limited number of streams are opened. The Game classes utilizes the pattern since the Game class contains a large amount of data, which could get costly if multiple instances are instantiated. \r\n\r\n ***\r\n![](https://s3-us-west-2.amazonaws.com/cpe305images/reindeerWithText.png)\r\n## Learning Experience\r\nThis quarter, I learned a lot about organization and efficiency. Thorough planning can improve productivity drastically, and I think the steps that we took to structure our programs helped immensely. The use of design patterns improved code quality and organization. I enjoyed better familiarizing myself with a JSON library and had a lot of fun with the builder tools we were introduced to. The only thin I wish was different that the first few weeks were dedicated more to personal implementations to get the projects to a sturdy state and the peer collaborations were done more towards the end of the quarter. ",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}